name: Python CI - Test & Coverage to SonarCloud and SonarQube

on:
  push:
    branches: ["**"] # Executa em qualquer push
  pull_request:
    branches: ["**"] # Executa em qualquer PR

jobs:
  build_and_lint:
    name: Build, Install Dependencies & Flake8 Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Create and install dependencies in venv
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install flake8 pytest pytest-cov
        # Garante que essas libs estão no venv

      - name: Configure Python paths for subsequent steps
        run: |
          echo "VIRTUAL_ENV=$(pwd)/.venv" >> $GITHUB_ENV
          echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
          echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

      - name: Run Flake8 checks
        # O Flake8 por padrão busca o setup.cfg na raiz do projeto.
        run: flake8 etl_taiga/ --exclude=.venv --config=setup.cfg

      - name: Zip virtual environment
        run: tar -czf .venv.tar.gz .venv

      - name: Upload venv artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-venv
          path: .venv.tar.gz

  unit_tests:
    name: Unit Tests with Coverage
    runs-on: ubuntu-latest
    needs: build_and_lint # Agora depende da job que também fez o lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Download venv artifact
        uses: actions/download-artifact@v4
        with:
          name: python-venv
          path: .

      - name: Unzip virtual environment and activate it
        run: |
          tar -xzf .venv.tar.gz
          source .venv/bin/activate
          # Re-configure Python paths, similar to build_and_lint for safety
          echo "$(pwd)/.venv/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$(pwd)/.venv" >> $GITHUB_ENV
          echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Run tests with coverage
        run: pytest etl_taiga/tests --cov=etl_taiga --cov-report=xml:coverage.xml --cov-report=term

      - name: Ensure coverage.xml exists
        run: |
          if [ ! -f coverage.xml ]; then
            echo "coverage.xml not found!"
            exit 1
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: unit_tests # Depende de unit_tests para ter o coverage.xml
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: .

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=iNineBD_Track-5Sem2025ETL
            -Dsonar.organization=ininetrack
            -Dsonar.projectName=Track-5Sem2025ETL
            -Dsonar.sources=etl_taiga
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.exclusions=etl_taiga/tests/**
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.verbose=true

  sonarqube:
    name: SonarQube (Self-Hosted)
    runs-on: ubuntu-latest
    needs: unit_tests # Depende de unit_tests para ter o coverage.xml
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: .

      - name: SonarQube Scan (Self-hosted)
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR2_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=Track-5Sem2025ETL
            -Dsonar.projectName=Track-5Sem2025ETL
            -Dsonar.sources=etl_taiga
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.exclusions=etl_taiga/tests/**
            -Dsonar.host.url=http://144.22.212.19:9001
            -Dsonar.verbose=true